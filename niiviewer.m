function niiviewer
%
% Graphical User Interface to display NIfTI volumes
%
% Usage - call niiviewer from Matlab console
%
% Written by Elena Assad, Andrea Vitale and Matteo Caffini
% CIMeC - Universita' dgli Studi di Trento
% on July 25th, 2016 in Rovereto (TN)
%

Hmain = []; % handles to uicontrols and graphics

%% Set color background
defaultColor = get(0,'DefaultUicontrolBackgroundcolor');

%% Create main figure
screenSize = get(0,'ScreenSize');
figureW = 1000;
figureH = 500;
figurePosition = [screenSize(3)/2-figureW/2 screenSize(4)/2-figureH/2-20 figureW figureH];
Hmain.mainFigure = figure('Position',figurePosition, ...
    'Visible','off',...
    'Units','pixels', ...
    'Resize','on',...
    'Name','niiviewer', ...
    'Numbertitle','off', ...
    'Tag','main_figure', ...
    'Color',defaultColor, ...
    'Toolbar','none', ...
    'Menubar','none', ...
    'DoubleBuffer','on', ...
    'DockControls','off',...
    'Renderer','OpenGL');

%% Load controls
buttonW = 0.08;
buttonH = 0.04;
buttonPosition = [0.04 0.90 buttonW buttonH];
Hmain.loadButton = uicontrol('Parent',Hmain.mainFigure,...
    'Units','normalized',...
    'Style','pushbutton',...
    'String','Load Folder',...
    'Position',buttonPosition,...
    'Visible','on',...
    'Callback',@loadButton);

folderW = 0.82;
folderH = 0.04;
folderPosition = [0.14 0.90 folderW folderH];
Hmain.folderEdit = uicontrol('Parent',Hmain.mainFigure,...
    'Units','normalized',...
    'Style','edit',...
    'HorizontalAlignment','left',...
    'String','Pick a folder...',...
    'Position',folderPosition,...
    'Visible','on');

%% Axis Panel
axesW = 0.43;
axesH = 0.84;
axesPosition = [0.53 0.04 axesW axesH];
Hmain.axisPanel = uipanel('Parent',Hmain.mainFigure,...
    'Title','',...
    'FontSize',12,...
    'BackgroundColor',[0 0 0]/255,...
    'Position',axesPosition);

axisW = 0.49;
axisH = 0.49;
axisPosition = [0.01 0.50 axisW axisH];
Hmain.axis(1) = axes('parent',Hmain.axisPanel,...
    'Units','normalized',...
    'Position', axisPosition,...
    'XDir','normal','YDir','normal',...
    'Box','off', ...
    'XGrid','off','YGrid','off',...
    'XTickLabel',[],'YTickLabel',[],...
    'Fontsize',6,...
    'Color',[0 0 0]/255,...
    'Box','off',...
    'Visible','on');

axisW = 0.49;
axisH = 0.49;
axisPosition = [0.50 0.50 axisW axisH];
Hmain.axis(2) = axes('parent',Hmain.axisPanel,...
    'Units','normalized',...
    'Position', axisPosition,...
    'XDir','normal','YDir','normal',...
    'Box','off', ...
    'XGrid','off','YGrid','off',...
    'XTickLabel',[],'YTickLabel',[],...
    'Fontsize',6,...
    'Color',[0 0 0]/255,...
    'Box','off',...
    'Visible','on');

axisW = 0.49;
axisH = 0.49;
axisPosition = [0.01 0.01 axisW axisH];
Hmain.axis(3) = axes('parent',Hmain.axisPanel,...
    'Units','normalized',...
    'Position', axisPosition,...
    'XDir','normal','YDir','normal',...
    'Box','off', ...
    'XGrid','off','YGrid','off',...
    'XTickLabel',[],'YTickLabel',[],...
    'Fontsize',6,...
    'Color',[0 0 0]/255,...
    'Box','off',...
    'Visible','on');

axisW = 0.49;
axisH = 0.49;
axisPosition = [0.50 0.01 axisW axisH];
Hmain.axis(4) = axes('parent',Hmain.axisPanel,...
    'Units','normalized',...
    'Position', axisPosition,...
    'XDir','normal','YDir','normal',...
    'Box','off', ...
    'XGrid','off','YGrid','off',...
    'XTickLabel',[],'YTickLabel',[],...
    'Fontsize',6,...
    'Color',[0 0 0]/255,...
    'Box','off',...
    'Visible','on');

%% Volumes Panel
volumesW = 0.29;
volumesH = 0.32;
volumesPosition = [0.04 0.56 volumesW volumesH];
Hmain.volumesPanel = uipanel('Parent',Hmain.mainFigure,...
    'Title','Volumes',...
    'Units','normalized',...
    'FontSize',12,...
    'Position',volumesPosition);

textW = 0.5;
textH = 0.2;
textTemplatePosition = [0.2 0.6 textW textH];
Hmain.cbTemplate = uicontrol('Parent',Hmain.volumesPanel,...
    'Style','text',...
    'Units','normalized',...
    'String','Template',...
    'HorizontalAlignment','left',...
    'FontWeight','bold',...
    'FontSize',12,...
    'Position',textTemplatePosition);
textOrigPosition = [0.2 0.4 textW textH];
Hmain.cbOrig = uicontrol('Parent',Hmain.volumesPanel,...
    'Style','text',...
    'Units','normalized',...
    'String','Orig',...
    'HorizontalAlignment','left',...
    'FontWeight','bold',...
    'FontSize',12,...
    'Position',textOrigPosition);
textReconsPosition = [0.2 0.2 textW textH];
Hmain.cbRecons = uicontrol('Parent',Hmain.volumesPanel,...
    'Style','text',...
    'Units','normalized',...
    'String','Recons',...
    'HorizontalAlignment','left',...
    'FontWeight','bold',...
    'FontSize',12,...
    'Position',textReconsPosition);

cbW = 0.2;
cbH = 0.2;
cbTemplatePosition = [0.6 0.65 cbW cbH];
Hmain.cbTemplate = uicontrol('Parent',Hmain.volumesPanel,...
    'Style','checkbox',...
    'Units','normalized',...
    'Callback',@refreshViews,...
    'FontWeight','bold',...
    'Enable','off',...
    'FontSize',12,...
    'Position',cbTemplatePosition);
cbOrigPosition = [0.6 0.45 cbW cbH];
Hmain.cbOrig = uicontrol('Parent',Hmain.volumesPanel,...
    'Style','checkbox',...
    'Units','normalized',...
    'Callback',@refreshViews,...
    'Enable','off',...
    'FontWeight','bold',...
    'FontSize',12,...
    'Position',cbOrigPosition);
cbReconsPosition = [0.6 0.25 cbW cbH];
Hmain.cbRecons = uicontrol('Parent',Hmain.volumesPanel,...
    'Style','checkbox',...
    'Units','normalized',...
    'Callback',@refreshViews,...
    'Enable','off',...
    'FontWeight','bold',...
    'FontSize',12,...
    'Position',cbReconsPosition);
cmW = 0.05;
cmH = 0.2;
cmTemplatePosition = [0.1 0.6 cmW cmH];
Hmain.cmTemplate = uicontrol('Parent',Hmain.volumesPanel,...
    'Style','text',...
    'Units','normalized',...
    'String','x',...
    'ForegroundColor',[1 0 0],...
    'HorizontalAlignment','left',...
    'FontWeight','bold',...
    'FontSize',12,...
    'Position',cmTemplatePosition);
cmOrigPosition = [0.1 0.4 cmW cmH];
Hmain.cmOrig = uicontrol('Parent',Hmain.volumesPanel,...
    'Style','text',...
    'Units','normalized',...
    'String','x',...
    'ForegroundColor',[1 0 0],...
    'HorizontalAlignment','left',...
    'FontWeight','bold',...
    'FontSize',12,...
    'Position',cmOrigPosition);
cmReconsPosition = [0.1 0.2 cmW cmH];
Hmain.cmRecons = uicontrol('Parent',Hmain.volumesPanel,...
    'Style','text',...
    'Units','normalized',...
    'String','x',...
    'ForegroundColor',[1 0 0],...
    'HorizontalAlignment','left',...
    'FontWeight','bold',...
    'FontSize',12,...
    'Position',cmReconsPosition);

% listboxW = 0.96;
% listboxH = 0.96;
% listboxPosition = [0.02 0.02 listboxW listboxH];
% Hmain.listbox = uicontrol('Parent',Hmain.volumesPanel,...
%     'Units','normalized',...
%     'Style','listbox',...
%     'String','',...
%     'Min',1,'Max',1,... % Set Max - Min < 1 to disable multiple selection
%     'Position',listboxPosition,...
%     'Callback',@refreshViews,...
%     'Visible','on');

%% Metadata Panel
metadataW = 0.29;
metadataH = 0.50;
metadataPosition = [0.04 0.04 metadataW metadataH];
Hmain.metadataPanel = uipanel('Parent',Hmain.mainFigure,...
    'Title','Metadata',...
    'FontSize',12,...
    'Position',metadataPosition);
volumeW = 0.92;
volumeH = 0.50;

volumePosition = [0.04 0.46 volumeW volumeH];
Hmain.volumePanel = uipanel('Parent',Hmain.metadataPanel,...
    'Title','Volume',...
    'FontSize',12,...
    'Position',volumePosition);
voxelW = 0.92;
voxelH = 0.38;
voxelPosition = [0.04 0.04 voxelW voxelH];
Hmain.voxelPanel = uipanel('Parent',Hmain.metadataPanel,...
    'Title','Voxel',...
    'FontSize',12,...
    'Position',voxelPosition);
textSizeW = 0.50;
textSizeH = 0.20;
textSizePosition = [0.1 0.70 textSizeW textSizeH];
Hmain.textSize = uicontrol('Parent',Hmain.volumePanel,...
    'Style','text',...
    'Units','normalized',...
    'HorizontalAlignment','left',...
    'FontWeight','bold',...
    'String','Size',...
    'FontSize',11,...
    'Position',textSizePosition);
textTimePointsW = 0.50;
textTimePointsH = 0.20;
textTimePointsPosition = [0.1 0.20 textTimePointsW textTimePointsH];
Hmain.textTimePoints = uicontrol('Parent',Hmain.volumePanel,...
    'Style','text',...
    'Units','normalized',...
    'HorizontalAlignment','left',...
    'FontWeight','bold',...
    'String','TimePoints',...
    'FontSize',11,...
    'Position',textTimePointsPosition);
editSizeW = 0.50;
editSizeH = 0.20;
editSizePosition = [0.50 0.70 editSizeW editSizeH];
Hmain.editSize = uicontrol('Parent',Hmain.volumePanel,...
    'Style','text',...
    'Units','normalized',...
    'String','-',...
    'FontSize',11,...
    'BackgroundColor',defaultColor,...
    'Position',editSizePosition);
editTimePointsW = 0.50;
editTimePointsH = 0.20;
editTimePointsPosition = [0.50 0.20 editTimePointsW editTimePointsH];
Hmain.editTimePoints = uicontrol('Parent',Hmain.volumePanel,...
    'Style','text',...
    'Units','normalized',...
    'String','-',...
    'FontSize',11,...
    'BackgroundColor',defaultColor,...
    'Position',editTimePointsPosition);
%% Controls Panels
controlsW = 0.16;
controlsH = 0.84;
controlsPosition = [0.35 0.04 controlsW controlsH];
Hmain.controlsPanel = uipanel('Parent',Hmain.mainFigure,...
    'Title','Controls',...
    'Units','normalized',...
    'FontSize',12,...
    'Position',controlsPosition);

textW = 0.12;
textH = 0.12/2.286;
textCPosition = [0.16 0.90 textW textH];
Hmain.textC = uicontrol('Parent',Hmain.controlsPanel,...
    'Style','text',...
    'Units','normalized',...
    'String','C',...
    'FontSize',12,...
    'Position',textCPosition);
textSPosition = [0.44 0.90 textW textH];
Hmain.textS = uicontrol('Parent',Hmain.controlsPanel,...
    'Style','text',...
    'Units','normalized',...
    'String','S',...
    'FontSize',12,...
    'Position',textSPosition);
textTPosition = [0.72 0.90 textW textH];
Hmain.textT = uicontrol('Parent',Hmain.controlsPanel,...
    'Style','text',...
    'Units','normalized',...
    'String','T',...
    'FontSize',12,...
    'Position',textTPosition);

sliderW = 0.12;
sliderH = 0.45;
sliderCPosition = [0.16 0.45 sliderW sliderH];
Hmain.sliderC = uicontrol('Parent',Hmain.controlsPanel,...
    'Style','slider',...
    'Units','normalized',...
    'FontSize',12,...
    'Value',1,...
    'Min',1,...
    'Max',1,...
    'SliderStep',[1 1],...
    'Enable','off',...
    'Callback',@refreshViews,...
    'Position',sliderCPosition);
sliderSPosition = [0.44 0.45 sliderW sliderH];
Hmain.sliderS = uicontrol('Parent',Hmain.controlsPanel,...
    'Style','slider',...
    'Units','normalized',...
    'FontSize',12,...
    'Value',1,...
    'Min',1,...
    'Max',1,...
    'SliderStep',[1 1],...
    'Enable','off',...
    'Callback',@refreshViews,...
    'Position',sliderSPosition);
sliderTPosition = [0.72 0.45 sliderW sliderH];
Hmain.sliderT = uicontrol('Parent',Hmain.controlsPanel,...
    'Style','slider',...
    'Units','normalized',...
    'FontSize',12,...
    'Value',1,...
    'Min',1,...
    'Max',1,...
    'SliderStep',[1 1],...
    'Enable','off',...
    'Callback',@refreshViews,...
    'Position',sliderTPosition);

editCPosition = [0.16 0.30 textW textH];
Hmain.editC = uicontrol('Parent',Hmain.controlsPanel,...
    'Style','text',...
    'Units','normalized',...
    'String','C',...
    'FontSize',8,...
    'BackgroundColor',defaultColor,...
    'Position',editCPosition);
editSPosition = [0.44 0.30 textW textH];
Hmain.editS = uicontrol('Parent',Hmain.controlsPanel,...
    'Style','text',...
    'Units','normalized',...
    'String','S',...
    'FontSize',8,...
    'BackgroundColor',defaultColor,...
    'Position',editSPosition);
editTPosition = [0.72 0.30 textW textH];
Hmain.editT = uicontrol('Parent',Hmain.controlsPanel,...
    'Style','text',...
    'Units','normalized',...
    'String','T',...
    'FontSize',8,...
    'BackgroundColor',defaultColor,...
    'Position',editTPosition);

textTimeW = 0.80;
textTimeH = 0.06;
textTimePosition = [0.1 0.18 textTimeW textTimeH];
Hmain.textTime = uicontrol('Parent',Hmain.controlsPanel,...
    'Style','text',...
    'Units','normalized',...
    'HorizontalAlignment','center',...
    'String','Timepoint',...
    'FontSize',10,...
    'Position',textTimePosition);
sliderTimeW = 0.68;
sliderTimeH = 0.03;
sliderTimePosition = [0.16 0.15 sliderTimeW sliderTimeH];
Hmain.sliderTime = uicontrol('Parent',Hmain.controlsPanel,...
    'Style','slider',...
    'Units','normalized',...
    'FontSize',12,...
    'Value',1,...
    'Min',1,...
    'Max',1,...
    'SliderStep',[1 1],...
    'Enable','off',...
    'Callback',@refreshViews,...
    'Position',sliderTimePosition);
editTimeW = 0.68;
editTimeH = 0.03;
editTimePosition = [0.16 0.10 editTimeW editTimeH];
Hmain.editTime = uicontrol('Parent',Hmain.controlsPanel,...
    'Style','text',...
    'Units','normalized',...
    'String','-',...
    'FontSize',8,...
    'BackgroundColor',defaultColor,...
    'Position',editTimePosition);
%% Nested function
    function loadButton(hObject,callbackdata)
        Hmain.currentFolder = uigetdir('', 'Pick data from folder...');
        %Hmain.currentFolder = 'C:\Users\matteo.caffini\Google Drive\NeoLab\Connectivity\reconstructions\NoNoise_0depth';
        if Hmain.currentFolder~=0
            MyFolderInfo = dir([Hmain.currentFolder '\orig\*.nii']);
            volumesList = {MyFolderInfo(:).name};
            nTimePoints = length(volumesList);
            %set(Hmain.listbox,'String',volumesList);
            set(Hmain.folderEdit,'String',Hmain.currentFolder);
            set(Hmain.sliderC,'Enable','on');
            set(Hmain.sliderS,'Enable','on');
            set(Hmain.sliderT,'Enable','on');
            set(Hmain.sliderTime,'Enable','on');
            set(Hmain.cbTemplate,'Enable','on');
            set(Hmain.cbOrig,'Enable','on');
            set(Hmain.cbRecons,'Enable','on');
            set(Hmain.sliderTime,'Value',1);
            set(Hmain.sliderTime,'Max',nTimePoints);
            set(Hmain.sliderTime,'SliderStep',[1/nTimePoints 10/nTimePoints]);
            set(Hmain.cbTemplate,'Value',1);
            set(Hmain.cbOrig,'Value',1);
            set(Hmain.cbRecons,'Value',0);
            if exist([Hmain.currentFolder '\template.nii'],'file')==2
                set(Hmain.cmTemplate,'String',char(hex2dec('2713')));
                set(Hmain.cmTemplate,'ForegroundColor',[0 1 0]);
            end
            if exist([Hmain.currentFolder '\orig'],'dir')==7
                set(Hmain.cmOrig,'String',char(hex2dec('2713')));
                set(Hmain.cmOrig,'ForegroundColor',[0 1 0]);
            end
            if exist([Hmain.currentFolder '\recons'],'dir')==7
                set(Hmain.cmRecons,'String',char(hex2dec('2713')));
                set(Hmain.cmRecons,'ForegroundColor',[0 1 0]);
            end
            refreshViews;
        end
    end

    function refreshViews(hObject,callbackdata)
        
        %temp = get(Hmain.listbox, 'String');
        currentTimePoint = round(get(Hmain.sliderTime, 'Value'));
        set(Hmain.editTime,'String',currentTimePoint);
        %currentVolume = temp{get(Hmain.listbox, 'Value')};
        currentFolder = Hmain.currentFolder;
        dataset = regexp(currentFolder,'\','split');
        dataset = dataset{end};
        currentVolume_orig = [dataset '_' sprintf('%03d',currentTimePoint) '.nii'];
        currentVolume_orig = load_nii([currentFolder '\orig\' currentVolume_orig]);
        currentVolume_orig = currentVolume_orig.img;
        currentVolume_recons = [dataset '_' sprintf('%03d',currentTimePoint) '_r.nii'];
        currentVolume_recons = load_nii([currentFolder '\recons\' currentVolume_recons]);
        currentVolume_recons = currentVolume_recons.img;
        currentTemplate = load_nii([currentFolder '\template.nii']);
        currentTemplate = currentTemplate.img;
        
        rangeC = size(currentVolume_orig,2);
        rangeS = size(currentVolume_orig,1);
        rangeT = size(currentVolume_orig,3);
        
        %set(Hmain.sliderC,'Value',round(rangeC/2));
        %set(Hmain.sliderS,'Value',round(rangeS/2));
        %set(Hmain.sliderT,'Value',round(rangeT/2));
        
        set(Hmain.sliderC,'SliderStep',[1/rangeC 10/rangeC]);
        set(Hmain.sliderS,'SliderStep',[1/rangeS 10/rangeS]);
        set(Hmain.sliderT,'SliderStep',[1/rangeT 10/rangeT]);
        currentsliceC = round(get(Hmain.sliderC,'Value'));
        currentsliceS = round(get(Hmain.sliderS,'Value'));
        currentsliceT = round(get(Hmain.sliderT,'Value'));
        set(Hmain.sliderC,'Max',rangeC);
        set(Hmain.sliderS,'Max',rangeS);
        set(Hmain.sliderT,'Max',rangeT);
        set(Hmain.editC,'String',currentsliceC);
        set(Hmain.editS,'String',currentsliceS);
        set(Hmain.editT,'String',currentsliceT);
        set(Hmain.editTimePoints,'String',num2str(get(Hmain.sliderTime,'Max')));
        set(Hmain.editSize,'String',[num2str(get(Hmain.sliderC,'Max')) ' ' 'x' ' ' num2str(get(Hmain.sliderS,'Max')) ' ' 'x' ' ' num2str(get(Hmain.sliderT,'Max'))])
        
        cbT = get(Hmain.cbTemplate,'Value');
        cbO = get(Hmain.cbOrig,'Value');
        cbR = get(Hmain.cbRecons,'Value');
        
        if not(cbT)&&not(cbO)&&not(cbR)
            % Coronal
            axes(Hmain.axis(1));
            cla
            % Sagittal
            axes(Hmain.axis(2));
            cla
            % Transversal
            axes(Hmain.axis(3));
            cla
        end
        if cbT&&not(cbO)&&not(cbR)
            % Coronal
            axes(Hmain.axis(1));
            cla
            slice = rot90(squeeze(currentTemplate(:,currentsliceC,:)));
            imagesc(slice); axis equal, axis off, colormap(gray)
            % Sagittal
            axes(Hmain.axis(2));
            cla
            slice = rot90(squeeze(currentTemplate(currentsliceS,:,:)));
            imagesc(slice); axis equal, axis off, colormap(gray)
            % Transversal
            axes(Hmain.axis(3));
            cla
            slice = rot90(squeeze(currentTemplate(:,:,currentsliceT)));
            imagesc(slice); axis equal, axis off, colormap(gray)
        end
        if not(cbT)&&cbO&&not(cbR)
            % Coronal
            axes(Hmain.axis(1));
            cla
            slice = rot90(squeeze(currentVolume_orig(:,currentsliceC,:)));
            imagesc(slice); axis equal, axis off, colormap(gray)
            % Sagittal
            axes(Hmain.axis(2));
            cla
            slice = rot90(squeeze(currentVolume_orig(currentsliceS,:,:)));
            imagesc(slice); axis equal, axis off, colormap(gray)
            % Transversal
            axes(Hmain.axis(3));
            cla
            slice = rot90(squeeze(currentVolume_orig(:,:,currentsliceT)));
            imagesc(slice); axis equal, axis off, colormap(gray)
        end
        if not(cbT)&&not(cbO)&&cbR
            % Coronal
            axes(Hmain.axis(1));
            cla
            slice = rot90(squeeze(currentVolume_recons(:,currentsliceC,:)));
            imagesc(slice); axis equal, axis off, colormap(gray)
            % Sagittal
            axes(Hmain.axis(2));
            cla
            slice = rot90(squeeze(currentVolume_recons(currentsliceS,:,:)));
            imagesc(slice); axis equal, axis off, colormap(gray)
            % Transversal
            axes(Hmain.axis(3));
            cla
            slice = rot90(squeeze(currentVolume_recons(:,:,currentsliceT)));
            imagesc(slice); axis equal, axis off, colormap(gray)
        end
        if cbT&&cbO&&not(cbR)
            % Coronal
            axes(Hmain.axis(1));
            cla
            slice_t = rot90(squeeze(currentTemplate(:,currentsliceC,:)));
            slice_o = rot90(squeeze(currentVolume_orig(:,currentsliceC,:)));
            red = cat(3,ones(size(slice_t)),zeros(size(slice_t)),zeros(size(slice_t)));
            overlay = slice_o-slice_t;
            imagesc(slice_t); axis equal, axis off, colormap(gray)
            hold on
            h = imshow(red);
            set(h,'Alphadata', overlay/max(overlay(:)));
            % Sagittal
            axes(Hmain.axis(2));
            cla
            slice_t = rot90(squeeze(currentTemplate(currentsliceS,:,:)));
            slice_o = rot90(squeeze(currentVolume_orig(currentsliceS,:,:)));
            red = cat(3,ones(size(slice_t)),zeros(size(slice_t)),zeros(size(slice_t)));
            overlay = slice_o-slice_t;
            imagesc(slice_t); axis equal, axis off, colormap(gray)
            hold on
            h = imshow(red);
            set(h, 'Alphadata', overlay/max(overlay(:)));
            % Transversal
            axes(Hmain.axis(3));
            cla
            slice_t = rot90(squeeze(currentTemplate(:,:,currentsliceT)));
            slice_o = rot90(squeeze(currentVolume_orig(:,:,currentsliceT)));
            red = cat(3,ones(size(slice_t)),zeros(size(slice_t)),zeros(size(slice_t)));
            overlay = slice_o-slice_t;
            imagesc(slice_t); axis equal, axis off, colormap(gray)
            hold on
            h = imshow(red);
            set(h,'Alphadata', overlay/max(overlay(:)));
        end
        if cbT&&not(cbO)&&cbR
            % Coronal
            axes(Hmain.axis(1));
            cla
            slice_t = rot90(squeeze(currentTemplate(:,currentsliceC,:)));
            slice_r = rot90(squeeze(currentVolume_recons(:,currentsliceC,:)));
            green = cat(3,zeros(size(slice_t)),ones(size(slice_t)),zeros(size(slice_t)));
            overlay = slice_r;
            imagesc(slice_t); axis equal, axis off, colormap(gray)
            hold on
            h = imshow(green);
            set(h,'Alphadata', overlay/max(overlay(:)));
            % Sagittal
            axes(Hmain.axis(2));
            cla
            slice_t = rot90(squeeze(currentTemplate(currentsliceS,:,:)));
            slice_r = rot90(squeeze(currentVolume_recons(currentsliceS,:,:)));
            green = cat(3,zeros(size(slice_t)),ones(size(slice_t)),zeros(size(slice_t)));
            overlay = slice_r;
            imagesc(slice_t); axis equal, axis off, colormap(gray)
            hold on
            h = imshow(green);
            set(h,'Alphadata', overlay/max(overlay(:)));
            % Transversal
            axes(Hmain.axis(3));
            cla
            slice_t = rot90(squeeze(currentTemplate(:,:,currentsliceT)));
            slice_r = rot90(squeeze(currentVolume_recons(:,:,currentsliceT)));
            green = cat(3,zeros(size(slice_t)),ones(size(slice_t)),zeros(size(slice_t)));
            overlay = slice_r;
            imagesc(slice_t); axis equal, axis off, colormap(gray)
            hold on
            h = imshow(green);
            set(h,'Alphadata', overlay/max(overlay(:)));
        end
        if cbT&&cbO&&cbR
            % Coronal
            axes(Hmain.axis(1));
            cla
            slice_t = rot90(squeeze(currentTemplate(:,currentsliceC,:)));
            slice_o = rot90(squeeze(currentVolume_orig(:,currentsliceC,:)));
            slice_r = rot90(squeeze(currentVolume_recons(:,currentsliceC,:)));
            red = cat(3,ones(size(slice_t)),zeros(size(slice_t)),zeros(size(slice_t)));
            green = cat(3,zeros(size(slice_t)),ones(size(slice_t)),zeros(size(slice_t)));
            overlay_o = slice_o-slice_t; 
            overlay_r = slice_r;
            imagesc(slice_t); axis equal, axis off, colormap(gray)
            hold on
            h = imshow(red);
            set(h,'Alphadata', overlay_o/max(overlay_o(:)));
            h = imshow(green);
            set(h,'Alphadata', overlay_r/max(overlay_r(:)));
            % Sagittal
            axes(Hmain.axis(2));
            cla
            slice_t = rot90(squeeze(currentTemplate(currentsliceS,:,:)));
            slice_o = rot90(squeeze(currentVolume_orig(currentsliceS,:,:)));
            slice_r = rot90(squeeze(currentVolume_recons(currentsliceS,:,:)));
            red = cat(3,ones(size(slice_t)),zeros(size(slice_t)),zeros(size(slice_t)));
            green = cat(3,zeros(size(slice_t)),ones(size(slice_t)),zeros(size(slice_t)));
            overlay_o = slice_o-slice_t;
            overlay_r = slice_r;
            imagesc(slice_t); axis equal, axis off, colormap(gray)
            hold on
            h = imshow(red);
            set(h,'Alphadata', overlay_o/max(overlay_o(:)));
            h = imshow(green);
            set(h,'Alphadata', overlay_r/max(overlay_r(:)));
            % Transversal
            axes(Hmain.axis(3));
            cla
            slice_t = rot90(squeeze(currentTemplate(:,:,currentsliceT)));
            slice_o = rot90(squeeze(currentVolume_orig(:,:,currentsliceT)));
            slice_r = rot90(squeeze(currentVolume_recons(:,:,currentsliceT)));
            red = cat(3,ones(size(slice_t)),zeros(size(slice_t)),zeros(size(slice_t)));
            green = cat(3,zeros(size(slice_t)),ones(size(slice_t)),zeros(size(slice_t)));
            overlay_o = slice_o-slice_t;
            overlay_r = slice_r;
            imagesc(slice_t); axis equal, axis off, colormap(gray)
            hold on
            h = imshow(red);
            set(h,'Alphadata', overlay_o/max(overlay_o(:)));
            h = imshow(green);
            set(h,'Alphadata', overlay_r/max(overlay_r(:)));
        end
        if not(cbT)&&cbO&&cbR
            % Coronal
            axes(Hmain.axis(1));
            cla
            slice_t = rot90(squeeze(currentTemplate(:,currentsliceC,:)));
            slice_o = rot90(squeeze(currentVolume_orig(:,currentsliceC,:)));
            slice_r = rot90(squeeze(currentVolume_recons(:,currentsliceC,:)));
            red = cat(3,ones(size(slice_t)),zeros(size(slice_t)),zeros(size(slice_t)));
            green = cat(3,zeros(size(slice_t)),ones(size(slice_t)),zeros(size(slice_t)));
            overlay_o = slice_o-slice_t;
            overlay_r = slice_r;
            %imagesc(slice_t); axis equal, axis off, colormap(gray)
            h = imshow(red);
            set(h,'Alphadata', overlay_o/max(overlay_o(:)));
            hold on
            h = imshow(green);
            set(h,'Alphadata', overlay_r/max(overlay_r(:)));
            % Sagittal
            axes(Hmain.axis(2));
            cla
            slice_t = rot90(squeeze(currentTemplate(:,currentsliceC,:)));
            slice_o = rot90(squeeze(currentVolume_orig(:,currentsliceC,:)));
            slice_r = rot90(squeeze(currentVolume_recons(:,currentsliceC,:)));
            red = cat(3,ones(size(slice_t)),zeros(size(slice_t)),zeros(size(slice_t)));
            green = cat(3,zeros(size(slice_t)),ones(size(slice_t)),zeros(size(slice_t)));
            overlay_o = slice_o-slice_t;
            overlay_r = slice_r;
            %imagesc(slice_t); axis equal, axis off, colormap(gray)
            h = imshow(red);
            set(h,'Alphadata', overlay_o/max(overlay_o(:)));
            hold on
            h = imshow(green);
            set(h,'Alphadata', overlay_r/max(overlay_r(:)));
            % Transversal
            axes(Hmain.axis(3));
            cla
            slice_t = rot90(squeeze(currentTemplate(:,currentsliceC,:)));
            slice_o = rot90(squeeze(currentVolume_orig(:,currentsliceC,:)));
            slice_r = rot90(squeeze(currentVolume_recons(:,currentsliceC,:)));
            red = cat(3,ones(size(slice_t)),zeros(size(slice_t)),zeros(size(slice_t)));
            green = cat(3,zeros(size(slice_t)),ones(size(slice_t)),zeros(size(slice_t)));
            overlay_o = slice_o-slice_t;
            overlay_r = slice_r;
            %imagesc(slice_t); axis equal, axis off, colormap(gray)
            h = imshow(red);
            set(h,'Alphadata', overlay_o/max(overlay_o(:)));
            hold on
            h = imshow(green);
            set(h,'Alphadata', overlay_r/max(overlay_r(:)));
        end
    end

%% Figure visible
set(Hmain.mainFigure,'Visible','on');
end